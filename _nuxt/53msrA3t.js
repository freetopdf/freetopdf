import{H as a,u as f}from"./CVECWm9d.js";let r=null;function s(o){const e={},t=o.split(`
`);for(const n of t){const c=n.trim();if(!c||c.startsWith("#"))continue;const i=c.indexOf("=");if(i===-1)continue;const u=c.substring(0,i).trim(),g=c.substring(i+1).trim().replace(/^["']|["']$/g,"");e[u]=g}return e}async function h(){if(r)return r;try{if(typeof window>"u"){const o=await a(()=>import("./BIHI7g3E.js"),[],import.meta.url),t=(await a(()=>import("./BIHI7g3E.js"),[],import.meta.url)).resolve(process.cwd(),"config.env");if(console.log("🔍 Trying to read config from:",t),o.existsSync(t)){const n=o.readFileSync(t,"utf-8");return r=s(n),console.log("✅ Config loaded from file:",r),r}}else try{const o=await fetch("/config.env");if(o.ok){const e=await o.text();return r=s(e),console.log("✅ Config loaded from browser:",r),r}}catch(o){console.log("❌ Failed to fetch config.env from browser:",o)}}catch(o){console.log("❌ Error loading config file:",o)}return console.log("⚠️ Using default config values"),{NODE_ENV:"development",NUXT_PUBLIC_API_URL:"http://localhost:8100",NUXT_PUBLIC_ADSENSE_CLIENT_ID:"ca-pub-6441782123701736",NUXT_PUBLIC_ADSENSE_TEST_MODE:"true"}}async function p(o,e=null){return(await h())[o]||e}async function U(){const o=await p("NODE_ENV","development");return console.log("🔍 Current environment from config.env:",o),o}async function m(){const o=await p("NUXT_PUBLIC_API_URL","http://localhost:8100");return console.log("🔍 API URL from config.env:",o),o}async function d(){var o;try{const e=await U();if(e)return e}catch(e){console.log("Failed to read from config.env:",e)}try{const e=f();return((o=e==null?void 0:e.public)==null?void 0:o.nodeEnv)||"production"}catch{return"production"}}const l={development:{baseURL:"http://localhost:8100",apiURL:"http://localhost:8100/api",healthURL:"http://localhost:8100/health",docsURL:"http://localhost:8100/docs",redocURL:"http://localhost:8100/redoc"},production:{baseURL:"https://api.freetopdf.com",apiURL:"https://api.freetopdf.com/api",healthURL:"https://api.freetopdf.com/health",docsURL:"https://api.freetopdf.com/docs",redocURL:"https://api.freetopdf.com/redoc"},test:{baseURL:"http://localhost:8000",apiURL:"http://localhost:8000/api",healthURL:"http://localhost:8000/health",docsURL:"http://localhost:8000/docs",redocURL:"http://localhost:8000/redoc"}};async function L(){const o=await d();return console.log("🔍 getApiConfig() - currentEnv:",o),o==="development"?l.development:o==="production"?l.production:l.test}async function R(){console.log("🔍 getApiUrl() called");try{const t=await m();if(t){console.log("✅ Using API URL from config.env file:",t);const n={baseURL:t,apiURL:`${t}/api`,healthURL:`${t}/health`,docsURL:`${t}/docs`,redocURL:`${t}/redoc`};return console.log("🔍 Final API URLs from file:",n),n}}catch(t){console.log("❌ Failed to read API URL from config.env:",t)}try{const t=f();if(console.log("🔍 runtimeConfig fallback:",t==null?void 0:t.public),t&&t.public&&t.public.apiUrl){const n=t.public.apiUrl;return console.log("✅ Using runtimeConfig API URL (fallback):",n),{baseURL:n,apiURL:`${n}/api`,healthURL:`${n}/health`,docsURL:`${n}/docs`,redocURL:`${n}/redoc`}}}catch(t){console.log("RuntimeConfig not available:",t.message)}const o=await d();console.log("⚠️ Using default API configuration for environment:",o);const e=await L();return console.log("🔍 Default config:",e),e}const v=async()=>(await R()).apiURL,E={pdfToWord:"/convert-pdf-to-word",wordToPdf:"/convert-to-pdf",mergePdf:"/merge-files",upload:"/upload",sendEmail:"/contact",downloadPdf:"/download-pdf",downloadWord:"/download-word",health:"/health"};async function C(o){return`${await v()}${o}`}export{E as a,v as b,C as g};
